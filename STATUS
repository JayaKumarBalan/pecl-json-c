
=====================================================================
PHP         : /usr/bin/php 
PHP_SAPI    : cli
PHP_VERSION : 5.4.9
ZEND_VERSION: 2.4.0
PHP_OS      : Linux - Linux dixsept.famillecollet.com 3.6.7-4.fc17.x86_64 #1 SMP Tue Nov 20 19:40:01 UTC 2012 x86_64
INI actual  : /home/remi/test/json/pecl-json-c
More .INIs  :  
CWD         : /home/remi/test/json/pecl-json-c
Extra dirs  : 
VALGRIND    : Not used
=====================================================================
TIME START 2012-11-27 06:52:03
=====================================================================
TEST 1/46 [tests/001.phpt]PASS json_decode() tests [tests/001.phpt] 
TEST 2/46 [tests/002.phpt]PASS json_encode() tests [tests/002.phpt] 
TEST 3/46 [tests/003.phpt]PASS json_encode() & endless loop - 1 [tests/003.phpt] 
TEST 4/46 [tests/004.phpt]PASS json_encode() & endless loop - 2 [tests/004.phpt] 
TEST 5/46 [tests/005.phpt]PASS json_encode() & endless loop - 3 [tests/005.phpt] 
TEST 6/46 [tests/006.phpt]PASS json_encode() & extended encoding [tests/006.phpt] 
TEST 7/46 [tests/007.phpt]XFAIL json_last_error() tests [tests/007.phpt]   XFAIL REASON: Different parser, so different error codes.
TEST 8/46 [tests/008.phpt]FAIL json_decode() with large integers [tests/008.phpt] 
TEST 9/46 [tests/bug40503.phpt]PASS Bug #40503 (json_encode() value corruption on 32bit systems with overflown values) [tests/bug40503.phpt] 
TEST 10/46 [tests/bug41034.phpt]PASS Bug #41034 (json_encode() ignores null byte started keys in arrays) [tests/bug41034.phpt] 
TEST 11/46 [tests/bug41067.phpt]PASS Bug #41067 (json_encode() problem with UTF-16 input) [tests/bug41067.phpt] 
TEST 12/46 [tests/bug41403.phpt]FAIL Bug #41403 (json_decode cannot decode floats if localeconv decimal_point is not '.') [tests/bug41403.phpt] 
TEST 13/46 [tests/bug41504.phpt]PASS Bug #41504 (json_decode() converts empty array keys to "_empty_") [tests/bug41504.phpt] 
TEST 14/46 [tests/bug41567.phpt]PASS Bug #41567 (json_encode() double conversion is inconsistent with PHP) [tests/bug41567.phpt] 
TEST 15/46 [tests/bug42090.phpt]FAIL Bug #42090 (json_decode causes segmentation fault) [tests/bug42090.phpt] 
TEST 16/46 [tests/bug42785.phpt]PASS Bug #42785 (Incorrect formatting of double values with non-english locales) [tests/bug42785.phpt] 
TEST 17/46 [tests/bug43941.phpt]PASS Bug #43941 (json_encode() invalid UTF-8) [tests/bug43941.phpt] 
TEST 18/46 [tests/bug45791.phpt]PASS Bug #45791 (json_decode() does not handle number 0e0) [tests/bug45791.phpt] 
TEST 19/46 [tests/bug46215.phpt]PASS Bug #46215 (json_encode mutates its parameter and has some class-specific state) [tests/bug46215.phpt] 
TEST 20/46 [tests/bug46944.phpt]PASS Bug #46944 (json_encode() doesn't handle 3 byte utf8 correctly) [tests/bug46944.phpt] 
TEST 21/46 [tests/bug47644.phpt]PASS Bug #47644 (valid large integers are truncated) [tests/bug47644.phpt] 
TEST 22/46 [tests/bug53946.phpt]PASS bug #53946 (json_encode() with JSON_UNESCAPED_UNICODE) [tests/bug53946.phpt] 
TEST 23/46 [tests/bug54058.phpt]PASS Bug #54058 (json_last_error() invalid UTF-8 produces wrong error) [tests/bug54058.phpt] 
TEST 24/46 [tests/bug54484.phpt]PASS Bug #54484 (Empty string in json_decode doesn't reset json_last_error) [tests/bug54484.phpt] 
TEST 25/46 [tests/bug55543.phpt]PASS Bug #55543 (json_encode() with JSON_NUMERIC_CHECK & numeric string properties) [tests/bug55543.phpt] 
TEST 26/46 [tests/bug61537.phpt]PASS Bug #61537 (json_encode() incorrectly truncates/discards information) [tests/bug61537.phpt] 
TEST 27/46 [tests/bug61978.phpt]PASS Bug #61978 (Object recursion not detected for classes that implement JsonSerializable) [tests/bug61978.phpt] 
TEST 28/46 [tests/bug62369.phpt]PASS FR #62369 (Segfault on json_encode(deeply_nested_array) [tests/bug62369.phpt] 
TEST 29/46 [tests/fail001.phpt]FAIL JSON (http://www.crockford.com/JSON/JSON_checker/test/fail*.json) [tests/fail001.phpt] 
TEST 30/46 [tests/inf_nan_error.phpt]PASS An error is thrown when INF or NaN are encoded [tests/inf_nan_error.phpt] 
TEST 31/46 [tests/json_decode_basic.phpt]PASS Test json_decode() function : basic functionality [tests/json_decode_basic.phpt] 
TEST 32/46 [tests/json_decode_error.phpt]PASS Test json_decode() function : error conditions [tests/json_decode_error.phpt] 
TEST 33/46 [tests/json_encode_basic.phpt]PASS Test json_encode() function : basic functionality [tests/json_encode_basic.phpt] 
TEST 34/46 [tests/json_encode_basic_utf8.phpt]PASS Test json_encode() function : basic functionality with UTF8 string input [tests/json_encode_basic_utf8.phpt] 
TEST 35/46 [tests/json_encode_error.phpt]PASS Test json_encode() function : error conditions [tests/json_encode_error.phpt] 
TEST 36/46 [tests/json_encode_numeric.phpt]PASS Test json_encode() function with numeric flag [tests/json_encode_numeric.phpt] 
TEST 37/46 [tests/json_encode_pretty_print.phpt]PASS json_encode() with JSON_PRETTY_PRINT [tests/json_encode_pretty_print.phpt] 
TEST 38/46 [tests/json_encode_unescaped_slashes.phpt]PASS json_decode() tests [tests/json_encode_unescaped_slashes.phpt] 
TEST 39/46 [tests/jsonp.phpt]PASS json_decode() with comments [tests/jsonp.phpt] 
TEST 40/46 [tests/pass001.1.phpt]SKIP JSON (http://www.crockford.com/JSON/JSON_checker/test/pass1.json) [tests/pass001.1.phpt] reason: this test is for 32bit platform only
TEST 41/46 [tests/pass001.1_64bit.phpt]FAIL JSON (http://www.crockford.com/JSON/JSON_checker/test/pass1.json) [tests/pass001.1_64bit.phpt] 
TEST 42/46 [tests/pass001.phpt]FAIL JSON (http://www.crockford.com/JSON/JSON_checker/test/pass1.json) [tests/pass001.phpt] 
TEST 43/46 [tests/pass002.phpt]PASS JSON (http://www.crockford.com/JSON/JSON_checker/test/pass2.json) [tests/pass002.phpt] 
TEST 44/46 [tests/pass003.phpt]PASS JSON (http://www.crockford.com/JSON/JSON_checker/test/pass3.json) [tests/pass003.phpt] 
TEST 45/46 [tests/serialize.phpt]PASS json_encode() Serialization tests [tests/serialize.phpt] 
TEST 46/46 [tests/unsupported_type_error.phpt]PASS An error is thrown when an unsupported type is encoded [tests/unsupported_type_error.phpt] 
=====================================================================
TIME END 2012-11-27 06:52:05

=====================================================================
TEST RESULT SUMMARY
---------------------------------------------------------------------
Exts skipped    :    0
Exts tested     :   30
---------------------------------------------------------------------

Number of tests :   46                45
Tests skipped   :    1 (  2.2%) --------
Tests warned    :    0 (  0.0%) (  0.0%)
Tests failed    :    6 ( 13.0%) ( 13.3%)
Expected fail   :    1 (  2.2%) (  2.2%)
Tests passed    :   38 ( 82.6%) ( 84.4%)
---------------------------------------------------------------------
Time taken      :    2 seconds
=====================================================================

=====================================================================
EXPECTED FAILED TEST SUMMARY
---------------------------------------------------------------------
json_last_error() tests [tests/007.phpt]  XFAIL REASON: Different parser, so different error codes.
=====================================================================

=====================================================================
FAILED TEST SUMMARY
---------------------------------------------------------------------
json_decode() with large integers [tests/008.phpt]
Bug #41403 (json_decode cannot decode floats if localeconv decimal_point is not '.') [tests/bug41403.phpt]
Bug #42090 (json_decode causes segmentation fault) [tests/bug42090.phpt]
JSON (http://www.crockford.com/JSON/JSON_checker/test/fail*.json) [tests/fail001.phpt]
JSON (http://www.crockford.com/JSON/JSON_checker/test/pass1.json) [tests/pass001.1_64bit.phpt]
JSON (http://www.crockford.com/JSON/JSON_checker/test/pass1.json) [tests/pass001.phpt]
=====================================================================
